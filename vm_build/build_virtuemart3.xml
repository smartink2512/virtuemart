<?xml version="1.0" encoding="UTF-8"?>

<project name="Build VirtueMart" default="VIRTUEMART_AND_FULLINSTALLER" basedir=".">
    <!-- value can be: major, minor, bugfix -->
    <property name="releasetype" value="MINOR"/>
    <property name="vm.version" value="3.0.18.6"/>
    <property name="joomla.version" value="3.6.4"/>
    <property name="svn.lastrevision" value="9404"/>
    <property name="PHING.VM.CODENAME" value="Blue Corvus"/>
    <property name="PHING.VM.UPDATEFOLDER" value="vm3"/>
    <property file="build.properties"/>
    <target name="title">
        <echo message="BUILD VirtueMart package FROM ${export.to}  TO ${package.abspath}"/>
    </target>

    <!-- ============================================  -->
    <!-- environment dependent variable -->
    <!-- ============================================  -->
    <!-- FROM (EXPORT FOLDER)-->
    <property name="component.name" value="com_virtuemart"/>
    <property name="component.aio.name" value="com_virtuemart_allinone"/>
    <property name="site.component.path" value="${export.to}/components/${component.name}"/>
    <property name="admin.component.path" value="${export.to}/administrator/components/${component.name}"/>
    <property name="admin.language.path" value="${export.to}/administrator/language"/>

    <property name="modules.path" value="${export.to}/modules"/>
    <property name="admin.modules.path" value="${export.to}/administrator/modules"/>
    <property name="plugins.path" value="${export.to}/plugins"/>
    <property name="libraries.path" value="${export.to}/libraries"/>
    <property name="languageBE.path" value="${export.to}/administrator/language"/>
    <property name="languageFE.path" value="${export.to}/language"/>
    <property name="admin.aio.component.path" value="${export.to}/administrator/components/${component.aio.name}"/>

    <property name="vm.main.filename" value="${component.name}.${vm.version}"/>
    <property name="vm.aio.filename" value="${component.name}.${vm.version}_ext_aio"/>
    <property name="vm.extract.filename" value="${component.name}.${vm.version}_extract_first"/>
    <property name="full.extract.filename" value="VirtueMart${vm.version}_Joomla_${joomla.version}-Stable-Full_Package"/>
    <property name="joomla.folder.from" value="${joomla.path}"/>

    <property name="vm.folder.from" value="${export.to}"/>
    <property name="readme.file.from" value="${export.to}/vm_build"/>


    <!-- DESTINATION -->

    <property name="package.folder" value="${package.abspath}/${component.name}.${vm.version}_extract_first"/>


    <property name="package.folder.main" value="${package.abspath}/${component.name}.${vm.version}/${component.name}.${vm.version}"/>
    <property name="package.folder.aio" value="${package.abspath}/${component.name}.${vm.version}/${component.name}.aio.${vm.version}"/>
    <property name="package.admin.folder.aio" value="${package.abspath}/${component.name}.${vm.version}/${component.name}.aio.${vm.version}/admin"/>

    <property name="full.folder.to" value="${package.abspath}/${component.name}.${vm.version}/${full.extract.filename}"/>
    <property name="fullzip.folder.to" value="${package.folder}"/>


    <property name="package.admin.aio" value="${package.folder.aio}/admin"/>
    <property name="package.plugins.aio" value="${package.admin.aio}/plugins"/>
    <property name="package.modules.aio" value="${package.admin.aio}/modules"/>
    <property name="package.admin.modules.aio" value="${package.admin.aio}/modulesBE"/>

    <property name="package.language.aio" value="${package.admin.aio}/language"/>
    <property name="package.libraries.aio" value="${package.admin.aio}/libraries"/>



    <!-- ============================================  -->
    <!-- SVN EXPORT variables -->
    <!-- ============================================  -->
    <property name="svn.main.repository" value="https://dev.virtuemart.net/svn/virtuemart/trunk/virtuemart/"/>
    <property name="svn.main.path" value="virtuemart"/>

    <svnlastrevision
            svnpath="${svn.path}"
            repositoryurl="${svn.main.repository}"
            propertyname="svn.lastrevision"/>

    <!-- ============================================  -->
    <!-- used in version.php , and .xml files variables -->
    <!-- ============================================  -->
    <tstamp/>
    <property name="PHING.VM.PRODUCT" value="VirtueMart"/>
    <property name="PHING.VM.RELEASE" value="${vm.version}"/>
    <property name="PHING.VM.DEV_STATUS" value="${releasetype}"/>

    <property name="PHING.VM.RELDATE" value="${TODAY}"/>
    <property name="PHING.VM.RELTIME" value="${TSTAMP}"/>
    <property name="PHING.VM.RELTZ" value="GMT"/>
    <property name="PHING.VM.REVISION" value="${svn.lastrevision}"/>
    <tstamp>
        <format property="PHING.VM.YEAR" pattern="%Y"/>
    </tstamp>
    <property name="PHING.VM.COPYRIGHT" value="Copyright (C) 2004 - ${PHING.VM.YEAR} Virtuemart Team. All rights reserved."/>
    <property name="PHING.VM.LICENSE" value="http://www.gnu.org/licenses/gpl-2.0.html GNU/GPL"/>


    <!-- ============================================  -->
    <!-- DELETE OLD VERSION IF EXIST -->
    <!-- ============================================  -->
    <target name="delete_package_folder" depends="">
        <available file="${package.folder}" property="package.folder.exists" value="1"/>
        <if>
            <equals arg1="${package.folder.exists}" arg2="1"/>
            <then>
                <echo message="Deleting existing package folder: ${package.folder}..."/>
                <delete dir="${package.folder}"/>
            </then>
        </if>
    </target>

    <!-- SVN EXPORT Force overwrite files if they already exist: may be not needed-->
    <target name="delete_export_to_folder">
        <available file="${export.to}" property="export.to.path.exists" value="1"/>
        <if>
            <equals arg1="${export.from.repository}" arg2="1"/>
            <then>
                <echo message="Deleting existing build folder: ${export.to}..."/>
                <delete dir="${export.to}"/>
            </then>
            <else>
                <echo message="Don't delete files from ${export.to} folder"/>
            </else>
        </if>
    </target>


    <!-- ============================================  -->
    <!-- Target: CREATE THE DST DIRECTORY              -->
    <!-- ============================================  -->
    <target name="create_package_folder">
        <echo msg="Create Package destination directory"/>
        <mkdir dir="${package.folder}"/>
    </target>


    <!-- ============================================  -->
    <!--  FILESET ALL FUL INSTALLER FILES -->
    <!-- ============================================  -->
    <fileset dir="${export.to}" id='vm_full_installer_files.refid' defaultexcludes="true" >
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name=".phpstorm.meta.php"/>
        <exclude name="**/vm_update/**"/>
        <exclude name="**/vm_build/**"/>
        <exclude name="**/payzen/**"/>
        <exclude name="**/systempay/**"/>
        <exclude name="**/vm_update/**"/>
        <exclude name="**/ar-AA/**"/>
        <exclude name="**/bg-BG/**"/>
        <exclude name="**/bs-BA/**"/>
        <exclude name="**/ca-ES/**"/>
        <exclude name="**/cs-CZ/**"/>
        <exclude name="**/da-DK/**"/>
        <exclude name="**/de-DE/**"/>
        <exclude name="**/en-US/**"/>
        <exclude name="**/es-ES/**"/>
        <exclude name="**/el-GR/**"/>
        <exclude name="**/et-EE/**"/>
        <exclude name="**/fa-IR/**"/>
        <exclude name="**/fi-FI/**"/>
        <exclude name="**/fr-FR/**"/>
        <exclude name="**/hu-HU/**"/>
        <exclude name="**/id-ID/**"/>
        <exclude name="**/it-IT/**"/>
        <exclude name="**/lt-LT/**"/>
        <exclude name="**/nb-NO/**"/>
        <exclude name="**/no-NO/**"/>
        <exclude name="**/nl-NL/**"/>
        <exclude name="**/pl-PL/**"/>
        <exclude name="**/pt-BR/**"/>
        <exclude name="**/pt-PT/**"/>
        <exclude name="**/ro-RO/**"/>
        <exclude name="**/ru-RU/**"/>
        <exclude name="**/sk-SK/**"/>
        <exclude name="**/sl-SI/**"/>
        <exclude name="**/sr-YU/**"/>
        <exclude name="**/sv-SE/**"/>
        <exclude name="**/tr-TR/**"/>
        <exclude name="**/uk-UA/**"/>
        <exclude name="**/th-TH/**"/>
        <exclude name="**/zh-CN/**"/>
        <exclude name="**/zh-TW/**"/>
        <exclude name="index.html"/>
    </fileset>
    <!-- ============================================  -->
    <!--  FILESET ALL FUL INSTALLER FILES -->
    <!-- ============================================  -->
    <fileset dir="${joomla.folder.from}" id='joomla_full_installer_files.refid' defaultexcludes="true" >
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="uploader.swf"/>
        <exclude name="index.html"/>
    </fileset>


    <!-- ============================================  -->
    <!--  FILESET ALL MAIN COMPONENT FILES -->
    <!-- ============================================  -->
    <fileset dir="${site.component.path}" id='site.main.files' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="index.html"/>
    </fileset>

    <fileset dir="${admin.component.path}" id='admin.main.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name="virtuemart.xml"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="index.html"/>
    </fileset>
    <fileset dir="${admin.component.path}/install" id='install.main.files' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
    </fileset>

    <fileset dir="${admin.language.path}/en-GB" id='admin.language.main.files' defaultexcludes="true">
        <include name="en-GB.${component.name}**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
    </fileset>
    <fileset dir="${admin.component.path}" id='xml.main.file' defaultexcludes="true">
        <include name="virtuemart.xml"/>
    </fileset>
    <fileset dir="${readme.file.from}" id='readme.main.file' defaultexcludes="true">
        <include name="README-VIRTUEMART.txt"/>
    </fileset>

    <!-- ============================================  -->
    <!--  FILESET all AIO component files              -->
    <!-- ============================================  -->
    <fileset dir="${admin.aio.component.path}" id='admin.aio.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="install.xml"/>
        <exclude name="**/da-DK/**"/>
        <exclude name="**/de-DE/**"/>
        <exclude name="**/es-ES/**"/>
        <exclude name="**/el-GR/**"/>
        <exclude name="**/fr-FR/**"/>
        <exclude name="**/it-IT/**"/>
        <exclude name="**/nb-NO/**"/>
        <exclude name="**/no-NO/**"/>
        <exclude name="**/nl-NL/**"/>
        <exclude name="**/pl-PL/**"/>
        <exclude name="**/pt-BR/**"/>
        <exclude name="**/ru-RU/**"/>
        <exclude name="**/sv-SE/**"/>
        <exclude name="**/tr-TR/**"/>
        <exclude name="**/uk-UA/**"/>
        <exclude name="**/th-TH/**"/>
        <exclude name="index.html"/>
    </fileset>

    <fileset dir="${admin.aio.component.path}" id='root.aio.refid' defaultexcludes="true">
        <include name="script.vmallinone.php"/>
         <include name="install.xml"/>
         <exclude name="index.html"/>
    </fileset>

    <fileset dir="${modules.path}" id='modules.aio.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="index.html"/>
    </fileset>

    <fileset dir="${admin.modules.path}" id='admin.modules.aio.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="index.html"/>
    </fileset>

    <fileset dir="${plugins.path}" id='plugins.aio.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="**/payzen/**"/>
        <exclude name="**/systempay/**"/>
        <exclude name="index.html"/>
    </fileset>
 <fileset dir="${libraries.path}" id='libraries.aio.refid' defaultexcludes="true">
        <include name="**"/>
        <exclude name=".svn"/>
        <exclude name=".DS_Store"/>
        <exclude name="**/tcpdf/**"/>
     <exclude name="index.html"/>
    </fileset>


    <fileset dir="${package.admin.aio}" id='script.aio.refid' defaultexcludes="true">
        <include name="script.vmallinone.php"/>
    </fileset>
    <!-- ============================================  -->
    <!-- TARGET: copy all files for the FULL INSTALLER -->
    <!-- ============================================  -->
    <target name="full_installer_files">

        <echo msg="Copying ALL Joomla FILES From folder ${joomla.folder.from} TO ${full.folder.to} "/>
        <copy todir="${full.folder.to}" overwrite="true">
            <fileset refid="joomla_full_installer_files.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <available file="${full.folder.to}/media/system/swf" property="swf.folder.exists" value="1"/>
        <if>
            <equals arg1="${swf.folder.exists}" arg2="1"/>
            <then>
                <echo message="Deleting existing SWF folder: /media/system/swf..."/>
                <delete dir="${full.folder.to}/media/system/swf"/>
            </then>
        </if>

        <echo msg="Copying ALL VM FILES From folder ${vm.folder.from} TO ${full.folder.to} "/>
        <copy todir="${full.folder.to}" overwrite="true">
            <fileset refid="vm_full_installer_files.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

    </target>


    <!-- ============================================  -->
    <!-- TARGET: copy all files for the MAIN component                           -->
    <!-- ============================================  -->
    <target name="main_files">
        <echo msg="Copying ADMIN COMPONENT files to directory..."/>
        <copy todir="${package.folder.main}/administrator/components/${component.name}">
            <fileset refid="admin.main.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <echo msg="Copying SITE COMPONENT files to directory.. "/>
        <copy todir="${package.folder.main}/components/${component.name}">
            <fileset refid="site.main.files"/>
        </copy>
        <echo msg="Copying INSTALL files to directory..."/>
        <copy todir="${package.folder.main}/install">
            <fileset refid="install.main.files"/>
        </copy>

        <echo msg="Copying ADMIN LANGUAGE files to directory..."/>
        <copy todir="${package.folder.main}/administrator/language/en-GB">
            <fileset refid="admin.language.main.files"/>
        </copy>
        <echo msg="UPDATE AND COPY VERSION.PHP  to directory..."/>
        <echo msg="Copying INSTALL XML to directory..."/>
        <copy todir="${package.folder.main}">
            <fileset refid="xml.main.file"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
        <echo msg="Copying README file to directory..."/>
        <copy todir="${package.folder.main}">
            <fileset refid="readme.main.file"/>
        </copy>
    </target>
    <!-- ============================================  -->
    <!-- TARGET: copy all files for the AIO component  -->
    <!-- ============================================  -->
    <target name="aio_files">
        <echo msg="Copying AIO COMPONENT files to directory..."/>
        <copy todir="${package.admin.folder.aio}">
            <fileset refid="admin.aio.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>


        <echo msg="copy file script vmallinone script from the admin ${package.admin.aio}...to root ${package.folder.aio}"/>
        <copy todir="${package.folder.aio}">
            <fileset refid="root.aio.refid"/>
             <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <echo msg="Copying AIO: modules files to directory.."/>
        <copy todir="${package.modules.aio}" overwrite="true">
            <fileset refid="modules.aio.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <echo msg="Copying AIO: ADMIN modules files to directory.."/>
        <copy todir="${package.admin.modules.aio}" overwrite="true">
            <fileset refid="admin.modules.aio.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>



        <echo msg="Copying AIO: plugins files to directory.."/>
        <copy todir="${package.plugins.aio}" overwrite="true">
            <fileset refid="plugins.aio.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>
         <echo msg="Copying AIO: libraries files to directory.."/>
        <copy todir="${package.libraries.aio}" overwrite="true">
            <fileset refid="libraries.aio.refid"/>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>

        <echo msg="Copying AIO: SCRIPT from the admin ${package.admin.aio} to the root folder ${package.admin.aio}..."/>
        <copy todir="${package.folder.aio}" overwrite="true">
            <fileset refid="script.aio.refid"/>
        </copy>

    </target>

    <!-- ============================================  -->
    <!-- (DEFAULT)  SVN export            -->
    <!-- ============================================  -->
    <target name="svn.export">
        <if>
            <equals arg1="${export.from.repository}" arg2="1"/>
            <then>
                <echo message="Export from svn"/>
                <svnexport
                        svnpath="${svn.path}"
                        nocache="true"
                        repositoryurl="${svn.main.repository}"
                        todir="${export.to}"/>
            </then>
            <else>
                <echo message="Don't Export from svn repository"/>
            </else>
        </if>

    </target>


    <!-- ============================================  -->
    <!-- (DEFAULT)  CREATE TAR FILES                -->
    <!-- ============================================  -->
    <target name="clean" depends="delete_package_folder, delete_export_to_folder, create_package_folder">
        <echo msg="Cleaning Package directory OK!"/>
    </target>

    <target name="clean_full_installer"  >
        <available file="${full.folder.to}" property="full.folder.exists" value="1"/>
        <if>
            <equals arg1="${full.folder.exists}" arg2="1"/>
            <then>
                <echo message="Deleting existing FULL folder: ${full.folder.to}..."/>
                <delete dir="${full.folder.to}"/>
            </then>
        </if>

        <echo msg="Cleaning Full directory OK! ${full.folder.to}"/>
    </target>


    <target name="full_installer" depends="clean_full_installer,full_installer_files">

        <echo msg="ZIP ${package.abspath}/${full.extract.filename}.zip FROM ${full.folder.to}"/>
        <zip destfile="${fullzip.folder.to}/${full.extract.filename}.zip">
            <fileset dir="${full.folder.to}">
                <include name="**"/>
                <exclude name=".svn"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </zip>
        <echo msg="Full installer compressed OK!"/>

    </target>
    <target name="Main" depends="main_files">
        <echo msg="Creating MAIN PACKAGE  ..."/>
        <tar destfile="${package.folder}/${component.name}.${vm.version}.tar.gz" compression="gzip">
            <fileset dir="${package.folder.main}">
                <include name="**"/>
                <exclude name=".svn"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </tar>
        <zip destfile="${package.folder}/${component.name}.${vm.version}.zip">
            <fileset dir="${package.folder.main}">
                <include name="**"/>
                <exclude name=".svn"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </zip>
        <echo msg="MAIN Component compressed OK!"/>
    </target>
    <target name="AIO" depends="aio_files">
        <echo msg="Creating AIO PACKAGE  ..."/>
        <tar destfile="${package.folder}/${component.name}.${vm.version}_ext_aio.tar.gz" compression="gzip">
            <fileset dir="${package.folder.aio}">
                <include name="**"/>
                <exclude name=".svn"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </tar>
        <zip destfile="${package.folder}/${component.name}.${vm.version}_ext_aio.zip">
            <fileset dir="${package.folder.aio}">
                <include name="**"/>
                <exclude name=".svn"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </zip>
        <echo msg="AIO Component compressed OK!"/>
    </target>

    <target name="VIRTUEMART_ALONE" depends="title, clean ,svn.export, Main, AIO">
        <echo msg="LATEST REVISION is ${svn.lastrevision}"/>
        <echo msg="DATE ${TODAY}, TIME ${TSTAMP}"/>
        <!-- DOES not create a correct package for me -->
        <zip destfile="${package.folder}/${component.name}.${vm.version}_extract_first.zip">
            <fileset dir="${package.folder}">
                <include name="${package.folder}/${component.name}.${vm.version}.tar.gz"/>
                <include name="${package.folder}/${component.name}.${vm.version}_ext_aio.tar.gz"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </zip>
        <echo msg="EXTRACT FIRST compressed in directory OK!"/>
    </target>

    <target name="FULLINSTALLER_ALONE" depends="title, clean ,  svn.export, full_installer">
        <echo msg="LATEST REVISION is ${svn.lastrevision}"/>
        <echo msg="DATE ${TODAY}, TIME ${TSTAMP}"/>

        <echo msg="FULLINSTALLER_ALONE DONE!"/>
    </target>


    <target name="VIRTUEMART_AND_FULLINSTALLER" depends="title, clean , svn.export, Main, AIO, full_installer">
        <echo msg="LATEST REVISION is ${svn.lastrevision}"/>
        <echo msg="DATE ${TODAY}, TIME ${TSTAMP}"/>
        <!-- DOES not create a correct package for me -->
        <zip destfile="${package.folder}/${component.name}.${vm.version}_extract_first.zip">
            <fileset dir="${package.folder}">
                <include name="${package.folder}/${component.name}.${vm.version}.zip"/>
                <include name="${package.folder}/${component.name}.${vm.version}_ext_aio.zip"/>
                <exclude name=".DS_Store"/>
            </fileset>
        </zip>
        <echo msg="EXTRACT FIRST compressed in directory OK!"/>
    </target>

</project>
